name: Windows

on:
  push:
      branches:
        - main

# permissions:
#   contents: read

jobs:
  build:
    permissions:
      contents: write
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw-w64]
        bits: [64]
        include:
        - compiler: mingw-w64
          bits: 64
          ARCH: "x86_64"
          WINDRES_ARCH: pe-x86-64

    env:
      PLATFORM: Windows
      GNUTARGET: default
    # RELEASE_NAME: RGFW-dev_win${{ matrix.bits }}_${{ matrix.compiler }}

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    # - name: Setup Release Version
    #   run: |
    #     echo "RELEASE_NAME=RGFW-${{ github.event.release.tag_name }}_win${{ matrix.bits }}_${{ matrix.compiler }}" >> $GITHUB_ENV
    #   shell: bash
    #   if: github.event_name == 'release' && github.event.action == 'published'

    # - name: Setup Environment
    #   run: | 
    #     dir
    #     mkdir build
    #     cd build
    #     mkdir ${{ env.RELEASE_NAME }}
    #     cd ${{ env.RELEASE_NAME }}
    #     mkdir include
    #     mkdir lib
    #     cd ../../../RGFW

    # Setup MSBuild.exe path if required
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      if: matrix.compiler == 'msvc16'

    - name: Build Library (MinGW-w64 64bit)
      run: |
        ${{ matrix.ARCH }}-w64-mingw32-gcc.exe --version
        windres.exe --version
        dir C:\msys64\mingw64\bin
        make build PLATFORM=${{env.PLATFORM}}
      # rm -f RGFW.o 
      # make libRGFW.a
      # make libRGFW.dll
      # copy /Y .\libRGFW.dll .\build\${{ env.RELEASE_NAME }}\lib
      shell: cmd
      if: |
        matrix.compiler == 'mingw-w64' &&
        matrix.bits == 64

    - name: Generate Artifacts
      run: |
        cd build
        7z a ./${{ env.PLATFORM }}.zip ./${{ env.PLATFORM }}
        dir
      # copy /Y .\RGFW.h .\build\${{ env.RELEASE_NAME }}\include
      # xcopy .\deps .\build\${{ env.RELEASE_NAME }}\include /E /I /Y
      # copy /Y .\libRGFW.a .\build\${{ env.RELEASE_NAME }}\lib
      # copy /Y .\README.md .\build\${{ env.RELEASE_NAME }}\README.md
      # copy /Y .\LICENSE .\build\${{ env.RELEASE_NAME }}\LICENSE
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PLATFORM }}.zip
        path: ./build/${{ env.PLATFORM }}.zip

    # - name: Upload Artifact to Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: ./build/${{ env.RELEASE_NAME }}.zip
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   if: github.event_name == 'release' && github.event.action == 'published'
